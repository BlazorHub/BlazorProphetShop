@page "/prijava"

@inject IUserRepository userRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService

<h3>Prijava</h3>

@using System.ComponentModel.DataAnnotations

<div class="box-content" style="width: 300px;">
    <EditForm Model="userLogin" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />

        <div class="d-flex flex-column">
            <label class="mb-0" for="username">Korisničko ime</label>
            <RadzenTextBox Placeholder="Search..." 
                           @bind-Value="@userLogin.Username" 
                           Change="@(args => Change(args, "TextBox with placeholder"))" 
                           Style="margin-bottom: 20px" />
        </div>
        <div class="d-flex flex-column">
            <label class="mb-0" for="password">Lozinka</label>
            <RadzenPassword Style="margin-bottom: 20px" 
                            @bind-Value="@userLogin.Password"
                            Change="@(args => Change(args, "Password"))" />

        </div>
        <RadzenButton Click="@((args) => Click(args, "Button with text and icon"))" 
                      Text="Prijavi se" 
                      ButtonType="Radzen.ButtonType.Submit" 
                      Icon="login" 
                      Style="margin-bottom: 20px; width: 150px" />
    </EditForm>
</div>

@code {
    public UserLoginDTO userLogin = new UserLoginDTO();
    public Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    void Change(object value, string name)
    {
        events.Add(DateTime.Now, $"{name} value changed to {value}");
    }

    public async Task HandleLogin()
    {
        var userToken = await userRepository.Login(userLogin);
        Console.WriteLine(userToken.Data.Token);
        await loginService.Login(userToken.Data.Token);
        navigationManager.NavigateTo("/");
    }

    void Click(MouseEventArgs args, string buttonName)
    {
        events.Add(DateTime.Now, $"{buttonName} clicked");
        StateHasChanged();
    }
}
